pkgname=bash
pkgver=5.0.16
_patchlevel=${pkgver##*.}
_myver=${pkgver%.*}
_patchbase=${_myver/./}
pkgrel=2
pkgdesc="The GNU Bourne Again shell"
url="https://www.gnu.org/software/bash/bash.html"
arch="all"
license="GPL-3.0-or-later"
makedepends="bison flex readline-dev ncurses-dev"
install="$pkgname.post-install"
subpackages="$pkgname-dev $pkgname-doc"
options="!checkroot"
provides="/bin/sh"
source="https://ftp.gnu.org/gnu/bash/bash-${_myver}.tar.gz
	bash-noinfo.patch
	fix-jobs.patch
	"

# generate url's to patches. note: no forks allowed!
_i=1
_pad="00"
while [ $_i -le $_patchlevel ]; do
	[ $_i -ge 10 ] && _pad="0"
	[ $_i -ge 100 ] && _pad=
	source="$source https://ftp.gnu.org/gnu/bash/bash-$_myver-patches/bash$_patchbase-$_pad$_i"
	_i=$(( $_i + 1))
done

builddir="$srcdir/$pkgname-$_myver"

prepare() {
	cd "$builddir"

	# NOTE: This section is for applying the vendor patches, which are required to fix
	# security holes.  `default_prepare` does *not* apply vendor patches in the format
	# shipped with bash.  We also need to make sure vendor patches are applied before
	# our own.
	# If you disagree, please request an experimental rebuild with bash as /bin/sh,
	# before removing this section.
	for p in $source; do
		case $p in
		*/bash[0-9][0-9]-[0-9]*)
			msg "$p (vendor)"
			patch -p0 -i "$srcdir"/${p##*/} || return 1
			;;
		esac
	done

	default_prepare
}

build() {
	cd "$builddir"
	./configure \
		--build=$CBUILD \
		--host=$CHOST \
		--prefix=/usr \
		--bindir=/usr/bin \
		--mandir=/usr/share/man \
		--infodir=/usr/share/info \
		--with-curses \
		--disable-nls \
		--enable-readline \
		--without-bash-malloc \
		--with-installed-readline
	# parallel build workarounds
	make y.tab.c && make builtins/libbuiltins.a && make
}

check() {
	cd "$builddir"
	return 0
	make test
}

package() {
	cd "$builddir"
	make DESTDIR="$pkgdir" install

	rm -rf "$pkgdir"/usr/share/locale
}

dev() {
	default_dev
	mkdir -p "$subpkgdir"/usr/bin "$subpkgdir"/usr/lib/$pkgname
	mv "$pkgdir"/usr/bin/${pkgname}bug "$subpkgdir"/usr/bin
	mv "$pkgdir"/usr/lib/$pkgname/Makefile* "$subpkgdir"/usr/lib/$pkgname
}

b2sums="a6c4d79144aa0c0f4a9433d618085c0d46b792b1de429b161f9f0266b55c099e13e44416c0886758a6f29411f5ceb79bfb0ec4eda47473f2713ae0b8081d6d3e  bash-5.0.tar.gz
9073c71134b1fedb48dae28224afa582e354f620ebbb03c7595aace714bfa7d98f017f564f34be256b023aebf8d7d9e43786ab0af6d4d776275dd816bf8a6e05  bash-noinfo.patch
75e2fff4d9df5858b0770edf598498681d0e7e25ad70876d2da0af8d3747b5ceeb6cba74d16a9901158a31b05171cc4d34d3b9f0275ead74abc3ca919252962f  fix-jobs.patch
3eedb63f943ba89f1147c907fcacb5e5af891a6728edb4ced972e19d586573db6fface4947490ffb9f42a2ed87c745a352e102fb727637eec8422d7323da9470  bash50-001
022340f0da0d5b7c571c2015beb87268452faf1484bedb75e2868b16904eed93749d5c0ed62b9da43badb3ee2efe3bdb4f55e212a40c3cfdc073d44623475b85  bash50-002
ccf05f2f0da6dd0a1d25d22200326d405019acbce27a7fbcb3f16ff09027d5dec5cb9d5dc557638f72089a3444b25d5106abdb0916cac0797562b4d8b68a0ab2  bash50-003
88b44a5268c8ec970f0c18997cfe5211f6a2a8c07f813d48fd931e62e1b3b95fd76e5b66b7ebf1ffcd1d42e5c133675f954de0ca7dfc8c36aa69f11253480374  bash50-004
3ded5d200102ad7cc547c6f7e9bf9bba468a10791fc096988c49f46ea8d6708efb0d4c383a9e2e2fccef8a49b217e6a22d9435c807233a1d0a971265bbe31761  bash50-005
ae3738874ada015202a6ff21a50ea9370c6147b4c74a23112e755396fc1db743afa42abdd4df635f0c0b9f3536796064b41d0667ef8ade1543b5c70b688ae9d1  bash50-006
1c25af8c098322ad16353dfb32cdba2613659f5042792c725dbde7b2bc276ff09a4af44bf223fd6114dcc9beee98ccbd8081d3010fa1cfeb33bc93fc9c81e4f7  bash50-007
9919e24840f32a44a9040fd8fa9fb482da1859223e70e75d21d5fdfc03f229ec2e98324707b10fa3aa5b3fee0e8fe5328a684cdd1b3ee5567cd1eb127a4060cb  bash50-008
4a9b2035173dd23f9c8ac5474e573080112d9edcf918816b5dd41e880f212f66c2c80dd41793ec62449c487fec1ad2c57b353a00c0976a782098fa6be76d0f23  bash50-009
94792141dedbb8d2c9f9355c94eec56b1fa84459291c61ac31e9ee9a67e80edb95234b67ab59c5f3f039d596275c9b154544439bc730256beaf303e6cbf99c4c  bash50-010
7307aa709810ea3e9fbc0db6a558cb6a660736677edf56904721599be5c0a6e69b74cc01fb3988f1b06e7f8bcce512a3b5d773b7ebb3a7397a0e4815e84f48ce  bash50-011
3a107454439fa84b1416d0b17b81fd86cfd4cc046bb4c4ca820e09b4595f4bc95dd188f2957b2f2c83937a776eee3db19a7c070403014bfeb5d5778b26705aa1  bash50-012
8797fe0b8e01027222af9798ee8d57d161bfbedb617b257e91402ef60e7010dd32fc68e2477487813746842800387c5ea0cdd853e039cf7065a2786fd6d6a182  bash50-013
d52f9160d74b340fd5722725b572ac1abe74caf41add5421dfa56fd44916ead691e4d698de3ba118ff0f8fc8eadade7a980551134eb0daf18b0767ff9601a4b4  bash50-014
7df76369726332299c089db156c1e9bc6619fe2e925732da46ca47ca627f1bd7df4ea188a2c0f636e42623f2ee7ca40bc98551b5bd339ed4d5bee20b24ba38d0  bash50-015
8c9bb752a441b70b11655a9bd48e48ec9756a34d0513837faa94c64675c11d57ba1fb0bfc43a033040539f9c475a0efd00f375cf8ffe04a6d9d1d1c19575572e  bash50-016"

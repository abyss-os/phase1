pkgname=linux
pkgver=5.14.3
_pkgver=${pkgver/_/-}
pkgrel=0
pkgdesc="Linux kernel"
url="http://kernel.org"
#depends="mkinitfs"
makedepends="bash flex bison gsed bc linux-headers openssl-dev findutils rsync ncurses-dev elftoolchain-dev"
options="!strip"
source="https://cdn.kernel.org/pub/linux/kernel/v${pkgver%%.*}.x/linux-$pkgver.tar.xz
	config.aarch64
	config.x86_64
	config.ppc64le"

arch="all"
license="GPL-2.0"

builddir="$srcdir"/linux-"$_pkgver"
_builddir="$srcdir"/build

# map for CARCH->kernel arch
case $CARCH in
    x86_64) KARCH=x86;;
    aarch64) KARCH=arm64;;
    mips64*) KARCH=mips;;
    ppc64le) KARCH=powerpc;;
    riscv64) KARCH=riscv;;
    *) msg "Unknown arch"; return 1;;
esac

prepare() {
	default_prepare
	mkdir -p "$_builddir" && cd "$_builddir"
	cp -v "$srcdir"/config."$CARCH" .config
}

build() {
	cd "$_builddir"
    case $CARCH in
        aarch64) _make dtbs && _make ;;
        ppc64le) msg "Doesn't built yet";;
        *) _make;;
    esac
}

package() {
    cd "$_builddir"
    install -d "$pkgdir"/boot "$pkgdir"/usr/lib/modules

    case $CARCH in
        aarch64)
            if [ -d $_builddir/arch/arm64/boot/dts ]; then
                install -d $pkgdir/boot/dtb
                for i in $_builddir/arch/arm64/boot/dts/*.dtb; do
                    install -m644 "$i" $pkgdir/boot/dtb/
                done
            fi
            ;;
    esac

    # modules are disabled at the moment
    #_make install modules_install

    case $CARCH in
        x86_64) _make install && mv -v $pkgdir/boot/vmlinuz $pkgdir/boot/vmlinuz-$pkgver;;
        aarch64) _make install;;
        *) msg "No kernel yet";;
    esac
}

# DO NOT USE THESE FUNCTIONS UNLESS YOU'RE A DEV AND KNOW WHAT YOU'RE DOING AND WHY
_make() {
	make -j${JOBS} -C "$builddir" O="$_builddir" \
		LLVM=1 LLVM_IAS=1 \
		KBUILD_BUILD_VERSION="$(( pkgrel + 1 ))-abyss" \
		INSTALL_MOD_PATH="$pkgdir"/usr \
		INSTALL_HDR_PATH="$pkgdir"/usr \
		INSTALL_PATH="$pkgdir"/boot \
        ARCH=$KARCH \
		"$@"
}
_oldconfig() {
	cd "$_builddir"
	cp -v "$srcdir"/config."$CARCH" .config
	_make oldconfig
	mv -v .config "$startdir"/config."$CARCH"
}
_menuconfig() {
	cd "$_builddir"
	[[ ! -f .config ]] && cp -v "$srcdir"/config."$CARCH" .config
	_make menuconfig
	cp -v .config "$startdir"/config."$CARCH"
}

b2sums="c4d2bcffe7149f66e37d05f7c13ebfe59263e7474a6f536317cc092eb9d7e917651059edaf71b26022310c67c1f2f017b2147e53bebcbfcc3f2c92dc6213a721  linux-5.14.3.tar.xz
f1571cae8772d99573a21a37665f1d7b1958e34ed092370a83d938d28f447c65735ff5655ba136b7b4447003caa894df42a7bddf0a908c1c97e6fea26a0478cd  config.aarch64
7b1cd3192f52883bbc6bb9108a41ad146bd7828c4f8269ca912c9a97eebf08e582d021225ab62f42ce8d30a89c40d44c1ee264423d10457a8ecab37741aa64ae  config.x86_64
1401196295273ae933b986a8b52276d678f58591c76b9626f96ffc414f889abcad08a6054bf92ed7395a774a48d3873794ed768658a028240c5271a7c4cf7363  config.ppc64le"

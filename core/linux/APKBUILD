pkgname=linux
pkgver=5.14.9
_pkgver=${pkgver/_/-}
pkgrel=0
pkgdesc="Linux kernel"
url="http://kernel.org"
#depends="mkinitfs"
makedepends="bash flex bison gsed bc linux-headers openssl-dev findutils rsync ncurses-dev elfutils-dev"
options="!strip"
source="https://cdn.kernel.org/pub/linux/kernel/v${pkgver%%.*}.x/linux-$pkgver.tar.xz
	config.aarch64
	config.x86_64
	config.ppc64le"

arch="all"
license="GPL-2.0"

builddir="$srcdir"/linux-"$_pkgver"
_builddir="$srcdir"/build

# map for CARCH->kernel arch
case $CARCH in
    x86_64) KARCH=x86;;
    aarch64) KARCH=arm64;;
    mips64*) KARCH=mips;;
    ppc64le) KARCH=powerpc;;
    riscv64) KARCH=riscv;;
    *) msg "Unknown arch"; return 1;;
esac

prepare() {
	default_prepare
	mkdir -p "$_builddir" && cd "$_builddir"
	cp -v "$srcdir"/config."$CARCH" .config
}

build() {
	cd "$_builddir"
    case $CARCH in
        aarch64) _make dtbs && _make ;;
        ppc64le) msg "Doesn't built yet";;
        *) _make;;
    esac
}

package() {
    cd "$_builddir"
    install -d "$pkgdir"/boot "$pkgdir"/usr/lib/modules

    case $CARCH in
        aarch64)
            if [ -d $_builddir/arch/arm64/boot/dts ]; then
                install -d $pkgdir/boot/dtb
                for i in $_builddir/arch/arm64/boot/dts/*.dtb; do
                    install -m644 "$i" $pkgdir/boot/dtb/
                done
            fi
            ;;
    esac

    # modules are disabled at the moment
    #_make install modules_install

    case $CARCH in
        x86_64) _make install && mv -v $pkgdir/boot/vmlinuz $pkgdir/boot/vmlinuz-$pkgver;;
        aarch64) _make install;;
        *) msg "No kernel yet";;
    esac
}

# DO NOT USE THESE FUNCTIONS UNLESS YOU'RE A DEV AND KNOW WHAT YOU'RE DOING AND WHY
_make() {
	make -j${JOBS} -C "$builddir" O="$_builddir" \
		LLVM=1 LLVM_IAS=1 \
		KBUILD_BUILD_VERSION="$(( pkgrel + 1 ))-abyss" \
		INSTALL_MOD_PATH="$pkgdir"/usr \
		INSTALL_HDR_PATH="$pkgdir"/usr \
		INSTALL_PATH="$pkgdir"/boot \
        ARCH=$KARCH \
		"$@"
}
_oldconfig() {
	cd "$_builddir"
	cp -v "$srcdir"/config."$CARCH" .config
	_make oldconfig
	mv -v .config "$startdir"/config."$CARCH"
}
_menuconfig() {
	cd "$_builddir"
	[[ ! -f .config ]] && cp -v "$srcdir"/config."$CARCH" .config
	_make menuconfig
	cp -v .config "$startdir"/config."$CARCH"
}

b2sums="3d3c4e64ddf53454c25a283287cfac2f8d9674e146c7fdf80d130cfa50252fc52c57ad187f47db09d134a2ea49e16bda5018c83cd7c38c6cec9bc2e27a18b751  linux-5.14.9.tar.xz
ca5854832ab919be586b9c1d155d7f1d2c6085d07112eeb938e0ddbe1be9f50c07cfec2e05e7c278e5aaa6b0c6eeddeb530091617682c1167f6cca627ae9d8da  config.aarch64
d5e62b64f7eb157026463e34055a94f70b07fe660b15d3e6bc98510e0b8abf8c49e82c5845db91df3e56d4499d4f8a928a6e7e98ab3a5dcb22218a09aeea67bd  config.x86_64
1401196295273ae933b986a8b52276d678f58591c76b9626f96ffc414f889abcad08a6054bf92ed7395a774a48d3873794ed768658a028240c5271a7c4cf7363  config.ppc64le"

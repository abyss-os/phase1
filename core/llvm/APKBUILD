pkgname=llvm

. ../llvm/common.inc

source="https://github.com/llvm/llvm-project/archive/llvmorg-$pkgver.tar.gz"
subpackages="lld llvm-binutils:binutils $pkgname-dev"

builddir="$srcdir/build"
_projects="llvm;lld"

depends="aalt compiler-rt libcxx elfutils-libelf libffi libedit ncurses zlib"
makedepends="compiler-rt cmake clang lld ncurses-dev libedit-dev swig ninja elfutils-libelf elfutils-dev libffi-dev perl python3-dev libexecinfo-dev zlib-dev linux-dev"

prepare() {
	default_prepare
	mkdir -p $builddir && cd $builddir

	cmake -G Ninja -Wno-dev \
			-DCMAKE_C_COMPILER=$CC \
			-DCMAKE_CXX_COMPILER=$CXX \
			-DCMAKE_C_COMPILER_TARGET=$CTARGET \
			-DCMAKE_CXX_COMPILER_TARGET=$CTARGET \
			-DCMAKE_C_FLAGS="$CFLAGS" \
			-DCMAKE_CXX_FLAGS="$CXXFLAGS" \
			-DCMAKE_INSTALL_PREFIX=/usr \
			-DCMAKE_BUILD_TYPE=Release \
			-DLLVM_VERSION_SUFFIX="" \
			-DLLVM_APPEND_VC_REV=OFF \
			-DLLVM_ENABLE_PROJECTS="$_projects" \
			-DLLVM_ENABLE_LLD=ON \
			-DLLVM_TARGETS_TO_BUILD="$_targets" \
			-DLLVM_INSTALL_BINUTILS_SYMLINKS=OFF \
			-DLLVM_INCLUDE_EXAMPLES=OFF \
			-DLLVM_ENABLE_PIC=ON \
			-DLLVM_ENABLE_LTO=OFF \
			-DLLVM_INCLUDE_GO_TESTS=OFF \
			-DLLVM_INCLUDE_TESTS=OFF \
			-DLLVM_HOST_TRIPLE=$CTARGET \
			-DLLVM_DEFAULT_TARGET_TRIPLE=$CTARGET \
			-DLLVM_ENABLE_LIBXML2=OFF \
			-DLLVM_ENABLE_ZLIB=ON \
			-DLLVM_BUILD_LLVM_DYLIB=ON \
			-DLLVM_LINK_LLVM_DYLIB=ON \
			-DLLVM_OPTIMIZED_TABLEGEN=ON \
			-DLLVM_INCLUDE_BENCHMARKS=OFF \
			-DLLVM_INCLUDE_DOCS=OFF \
			-DLLVM_TOOL_LLVM_ITANIUM_DEMANGLE_FUZZER_BUILD=OFF \
			-DLLVM_TOOL_LLVM_MC_ASSEMBLE_FUZZER_BUILD=OFF \
			-DLLVM_TOOL_LLVM_MICROSOFT_DEMANGLE_FUZZER_BUILD=OFF \
			$srcdir/llvm-project-llvmorg-$pkgver/llvm
}

build() {
	cd $builddir
	ninja -j${JOBS}
}

package() {
	cd $builddir
	DESTDIR="$pkgdir" ninja install
}

binutils() {
	depends="llvm"
	install="$subpkgname.post-install $subpkgname.post-install"
	mkdir -p ${subpkgdir}/usr/bin
	for t in addr2line ar as mt nm objcopy objdump ranlib readelf readobj size split strings strip dlltool lib; do
		mv -v ${pkgdir}/usr/bin/llvm-${t} ${subpkgdir}/usr/bin/llvm-${t}
	done
}

lld() {
	pkgdesc="$pkgname $pkgver"
	depends="llvm"
	install="$subpkgname.post-install $subpkgname.post-deinstall"
	mkdir -p ${subpkgdir}/usr/bin ${subpkgdir}/usr/lib
	for t in ld.lld lld ld64.lld lld-link wasm-ld; do
		mv -v ${pkgdir}/usr/bin/${t} ${subpkgdir}/usr/bin/${t}
	done
	mv -v ${pkgdir}/usr/lib/libLTO* ${subpkgdir}/usr/lib/
}

lldb() {
	pkgdesc="$pkgname $pkgver"
	depends="llvm-dev python3 python3-dev"
	mkdir -p ${subpkgdir}/usr/bin ${subpkgdir}/usr/lib/python3.7
	mv -v ${pkgdir}/usr/lib/liblldb* ${subpkgdir}/usr/lib/
	mv -v ${pkgdir}/usr/bin/lldb* ${subpkgdir}/usr/bin/
	mv -v ${pkgdir}/usr/lib/python3.7/* ${subpkgdir}/usr/lib/python3.7
	rm -rf ${pkgdir}/usr/lib/python3.7 ${subpkgdir}/usr/lib/python3.7/site-packages/six.py
}

llgo() {
	pkgdesc="$pkgname $pkgver"
	depends="llvm"
	mkdir -p ${subpkgdir}/usr/bin
	mv -v ${builddir}/bin/llvm-go ${subpkgdir}/usr/bin/
}

b2sums="b86e405f2b8e00436045fd409fe19cdde75c797b1192c62a22b5ec75e6b4dc8e874a0f33008dc31562445e4cbe53a992b6f48c684255a6a1ef261e595b8b161f  llvmorg-9.0.1.tar.gz"

diff --git a/configure b/configure
index 59d432b..15cb28b 100755
--- a/configure
+++ b/configure
@@ -485,87 +485,6 @@ wine()      { test "$OS_LC" = "wine"; }
 win32()     { cygwin || mingw32 || mingw64 || msys || wine; }
 posix_make() { aix || bsdos || hpux || irix || qnx || sunos; }
 
-# Checking CC version...
-# Intel C++ Compilers (no autoselect, use CC=/some/binary ./configure)
-cc_vendor=
-if test "$(basename $CC)" = "icc" || test "$(basename $CC)" = "ecc"; then
-  start_check "$CC version"
-  cc_vendor=intel
-  cc_name=$($CC -V 2>&1 | head -n 1 | cut -d ',' -f 1)
-  cc_version=$($CC -V 2>&1 | head -n 1 | cut -d ',' -f 2 | cut -d ' ' -f 3)
-  _cc_major=$(echo $cc_version | cut -d '.' -f 1)
-  _cc_minor=$(echo $cc_version | cut -d '.' -f 2)
-  case $cc_version in
-    '')
-      cc_version="v. ?.??, bad"
-      cc_fail=yes
-      ;;
-    10.1|11.1|12.*|13.*)
-      cc_version="$cc_version, ok"
-      ;;
-    *)
-      cc_version="$cc_version, bad"
-      cc_fail=yes
-      ;;
-  esac
-  finish_check "$cc_version"
-else
-  CC_TMP="$CC"
-  test -n "$OPT_CC" && OTHER_CC= || OTHER_CC="gcc cc"
-  for CC in "$CC_TMP" $OTHER_CC; do
-    cc_name_tmp=
-    if run_cmd "$CC -v"; then
-      cc_name_tmp=$($CC -v 2>&1 | tail -n 1 | cut -d ' ' -f 1)
-    elif run_cmd "$CC --version"; then
-      cc_name_tmp=$($CC --version 2>&1 | head -n 1 | cut -d ' ' -f 1)
-    fi
-    if test -n "${cc_name_tmp}"; then
-      if echo "$cc_name_tmp" | grep -q "gcc"; then
-        cc_name=$cc_name_tmp
-        start_check "$CC version"
-        cc_vendor=gnu
-        cc_version=$($CC -dumpversion 2>&1)
-        if ! echo $cc_version | grep -q '^[0-9][0-9]*\.[0-9]'; then
-          cc_v2=$($CC -dumpfullversion -dumpversion 2>/dev/null)
-          if echo $cc_v2 | grep -q '^[0-9][0-9]*\.[0-9]'; then
-            cc_version=$cc_v2
-          fi
-        fi
-        case $cc_version in
-          2.96*)
-            cc_fail=yes
-            ;;
-          *)
-            _cc_major=$(echo $cc_version | cut -d '.' -f 1)
-            _cc_minor=$(echo $cc_version | cut -d '.' -f 2)
-            _cc_mini=$(echo $cc_version | cut -d '.' -f 3)
-            ;;
-        esac
-        finish_check "$cc_name $cc_version"
-        break
-      fi
-      if echo "$cc_name_tmp" | grep -q "clang"; then
-        start_check "$CC version"
-        cc_vendor=clang
-        cc_version=$($CC -dumpversion 2>&1)
-        finish_check "clang $cc_version"
-        break
-      fi
-      cc_name_tmp=$($CC -V 2>&1 | head -n 1 | cut -d ' ' -f 2,3)
-      if test "$cc_name_tmp" = "Sun C"; then
-        start_check "$CC version"
-        cc_vendor=sun
-        cc_version=$($CC -V 2>&1 | head -n 1 | cut -d ' ' -f 4)
-        res_comment="experimental support"
-        finish_check "Sun C $cc_version"
-        break
-      fi
-    fi
-  done
-fi # icc
-test -z "$cc_vendor" && die "compiler not found"
-test "$cc_fail" = "yes" && die "unsupported compiler version"
-
 log_start "compiler working with default options"
 if ! cc_check_cflag; then
   die "compiler doesn't work"

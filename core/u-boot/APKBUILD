pkgname=u-boot
pkgver=2020.04
pkgrel=0
pkgdesc="u-boot bootloader common files"
url="http://www.denx.de/wiki/U-Boot/"
arch="aarch64"
license="GPL-2.0-or-later OFL-1.1 BSD-2-Clause BSD-3-Clause eCos-2.0 IBM-pibs
	ISC LGPL-2.0-only LGPL-2.1-only X11"
<<<<<<< HEAD
makedepends="$depends_dev bc dtc python3-dev swig bison flex openssl-dev"
source="ftp://ftp.denx.de/pub/u-boot/u-boot-${pkgver//_/-}.tar.bz2
		rpi4.config"
builddir="$srcdir"/u-boot-${pkgver//_/-}

case "$CARCH" in
arm*) board_configs="
	raspberrypi:rpi_4_64b
	";;
aarch64) board_configs="
	raspberrypi:rpi_4
	";;
esac

_allboards=""
for board_config in $board_configs; do
	_allboards="$_allboards $pkgname-${board_config%%:*}"
done
subpackages="$pkgname-all:_all $_allboards"
=======
makedepends="bc dtc python3-dev swig bison flex openssl-dev gcc"
source="ftp://ftp.denx.de/pub/u-boot/u-boot-${pkgver//_/-}.tar.bz2
	rpi.config"
builddir="$srcdir"/u-boot-${pkgver//_/-}

# supported boards
boards=""
case "$CARCH" in
	aarch64) boards="rpi";;

esac
>>>>>>> core/u-boot: fix rpi config

build() {
	cd "$builddir"
	touch include/config.h
	LC_ALL=C date +'#define U_BOOT_DATE "%b %d %C%y"' > include/timestamp_autogenerated.h
	LC_ALL=C date +'#define U_BOOT_TIME "%T"' >> include/timestamp_autogenerated.h

<<<<<<< HEAD
	local board_config board
	for board_config in $board_configs; do
		local configs="${board_config#*:}"
		for board in ${configs//,/ }; do
			msg "Building u-boot for $board"

			export BUILD_DIR="$builddir"/build/$board
			mkdir -p "$BUILD_DIR"
			cp -v $srcdir/rpi4.config "$BUILD_DIR"/.config
			make O="$BUILD_DIR" all || return 1
		done
=======
	for board in $boards; do
		msg "Building u-boot for $board"

		export BUILD_DIR="$builddir"/build/$board
		mkdir -p "$BUILD_DIR"
		cp -v $srcdir/$board.config "$BUILD_DIR"/.config
		make HOSTCC=gnu-gcc CC=gnu-gcc O="$BUILD_DIR" all
>>>>>>> core/u-boot: fix rpi config
	done
}

package() {
	cd "$builddir"/build
<<<<<<< HEAD
	mkd"$pkgdir"/usr/bin
}

_all() {
	pkgdesc="u-boot for all boards (meta package)"
	depends="$_allboards"

	mkdir -p "$subpkgdir"/
=======
	mkdir -p "$pkgdir"/usr/bin

>>>>>>> core/u-boot: fix rpi config
}

_split_boards() {
	cd "$builddir"/build
	pkgdesc="u-boot for $1"
	depends="u-boot"
	shift
	local board
	for board; do
		msg "Including board $board"
		mkdir -p "$subpkgdir"/usr/share/$pkgname/$board
		export BUILD_DIR="$builddir"/build/$board
		local ok=no
		for image in u-boot-sunxi-with-spl.bin -- MLO SPL u-boot.img -- u-boot.bin; do
			if [ "$image" = "--" ]; then
				[ "$ok" = yes ] && break
				continue
			fi
			if [ -e "$BUILD_DIR"/$image ]; then
				cp "$BUILD_DIR"/$image "$subpkgdir"/usr/share/$pkgname/$board \
					|| return 1
				ok=yes
			fi
		done
		[ "$ok" = yes ] || return 1
	done
}

for board_config in $board_configs; do
	_board="${board_config%%:*}"
	_configs="${board_config#*:}"
	eval "${_board}() { _split_boards $_board ${_configs//,/ }; }"
done

b2sums="29cf8be6027ce46e3bf3fae9b6736e6aba46dba2904112f845d79f50b52b7c7ff3437c71dac6ab22d112347467fb5baaa3ec421cb842ba3ae9b547e4f8378d03  u-boot-2020.04.tar.bz2
<<<<<<< HEAD
12b29bf20ab943902c2efaf93c22b1783cbf080f7c994f76f96299f08b873aefc95a9b15932d2c296a5f133184e5bde724d5f49e248b425a89472868d667e433  rpi4.config"
=======
f041a611249fca71c3bd36025f2ae708e69264c5190c08cbe8a1513c6303adc1b6e81f908a1e2bbafc20a49d2f1bfc738906ab826a620ec8b592f84a08cd36eb  rpi.config"
>>>>>>> core/u-boot: fix rpi config

pkgname=elfutils
pkgver=0.179
pkgrel=0
pkgdesc="A collection of utilities and DSOs to handle ELF files and DWARF data"
url="http://elfutils.org/"
arch="all"
license="GPL-3.0-or-later and (GPL-2.0-or-later or LGPL-3.0-or-later)"
makedepends="bison flex-dev zlib-dev bzip2-dev xz-dev argp-standalone autoconf automake libtool"
subpackages="$pkgname-dev"
source="https://sourceware.org/elfutils/ftp/$pkgver/elfutils-$pkgver.tar.bz2
	fix-uninitialized.patch
	musl-accessperms.patch
	musl-cdefs.patch
	musl-macros.patch
	musl-strerror_r.patch
	no-werror.patch
	"
builddir="$srcdir/elfutils-$pkgver"
provides="elfutils-libelf"

prepare() {
	cd "$builddir"
	default_prepare
	autoreconf -vif

	cat > src/error.h <<-EOF
	#ifndef _ERROR_H_
	#define _ERROR_H_

	#include <stdarg.h>
	#include <stdio.h>
	#include <stdlib.h>
	#include <string.h>
	#include <errno.h>

	static unsigned int error_message_count = 0;

	static inline void error(int status, int errnum, const char* format, ...)
	{
		va_list ap;
		fprintf(stderr, "%s: ", program_invocation_name);
		va_start(ap, format);
		vfprintf(stderr, format, ap);
		va_end(ap);
		if (errnum)
			fprintf(stderr, ": %s", strerror(errnum));
		fprintf(stderr, "\n");
		error_message_count++;
		if (status)
			exit(status);
	}

	#endif	/* _ERROR_H_ */
EOF
	cp src/error.h lib/ || return 1
	cat > lib/libintl.h <<-EOF
	#ifndef LIBINTL_H
	#define LIBINTL_H
	#define _(x) (x)
	#endif
EOF

}
build() {
	cd "$builddir"
	CC=$CC CXX=$CXX ./configure \
		--build=$CBUILD \
		--host=$CHOST \
		--prefix=/usr \
		--sysconfdir=/etc \
		--mandir=/usr/share/man \
		--localstatedir=/var \
		--disable-werror \
		--disable-nls \
		--disable-dependency-tracking \
		--disable-debuginfod \
		ac_cv_c99=yes
	cd lib && make -j1
	# for now we only build libelf
	cd ..
	cd libelf && make -j1
}

package() {
	cd "$builddir"/libelf
	make DESTDIR="$pkgdir" install
}

b2sums="b34f5af6d2a6613622f4d5da78b9ae10e60800fc91cb4607115fcaaf90c1c544460fb02e164f87e52951a446d6479909bbf3aa02b7db78b26af7863290de8848  elfutils-0.179.tar.bz2
4b63c7e8cde2345844a4beff212a0763b6b357b7795b6e5467901b2dbca161a8f79c7d80a87da3150c675192566ac5b5212056007f8ba8972fbda2f82ffb72bf  fix-uninitialized.patch
6e0d74906438cdbf9b14b66619513fd487015179f87fd239525f63d2b875c8eb7482c40e6aa1b1e43c1784a8d0ed39b2a5830ef54d95e59fc7b1971309890a3f  musl-accessperms.patch
5672f16b2566efa9fa46d717792cc17e14f627a35798759af68f95d38adb22c3c5ef9cad83b8ab873f1cfd00ded5f86efa282703ebbe680775a5028c3c1dfd8f  musl-cdefs.patch
42407a1850a0246c8d75c47581e394feeccea2868265baa635f789d7d66cc9fada994babba87884b378cbf205fddc5a95d56fcdd07d68f6e37f8aec457aa73a0  musl-macros.patch
d8e5e80eade4874e1957cd20866f69f9c513b70effa15fce5db125ce3bcbb0ead1e6999c89309346a3e6cf7f3d6a8efbc09946ae1deada62cea91051327e22bb  musl-strerror_r.patch
b7dc5e0936d650c5b84962d1bd162701ae99f0451a72bc4f20e7160f248f8b19e4fe255ece76132e81d28cdf4c0f3e64253af569baf9c4c04f59e7a56445cdf0  no-werror.patch"

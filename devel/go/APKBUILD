pkgname=go
pkgver=1.17.3
pkgrel=0
pkgdesc="Go programming language compiler"
url="https://golang.org/"
arch="all"
license="BSD-3-Clause"
makedepends="bash go-bootstrap"
subpackages="$pkgname-doc"
source="https://golang.org/dl/go${pkgver/_/}.src.tar.gz"
options="!check"

export GOPATH="$srcdir"
export GOROOT="$GOPATH"/go
export builddir="$GOROOT"

provides="go-bootstrap=$pkgver-r$pkgrel"

GOROOT_FINAL=/usr/lib/go
GOROOT_BOOTSTRAP=$GOROOT_FINAL

export GO_LDSO=/usr/lib/$(readlink /usr/lib/libc.so) GOMIPS64=softfloat GO_LDFLAGS='-buildmode=pie'

case "$CARCH" in
    ppc64le|mips64) export GO_LDFLAGS='';;
esac

build() {
    msg "Using LDSO: ${GO_LDSO}, flags: ${GO_LDFLAGS}"
	cd src
	./make.bash
}

check() {
	cd src
	./run.bash --no-rebuild -k
}

package() {
	# clean source tree
	rm -rf pkg/bootstrap \
		pkg/obj
	# we want to keep test data around so users can have deeper go test
	# removing .bash, .rc etc isn't really worth it

	dbin="$pkgdir"/usr/bin
	dgo="$pkgdir"/"$GOROOT_FINAL"
	ddoc="$pkgdir"/usr/share/doc/"$pkgname"
	install -d \
		"$dbin" \
		"$dgo"/bin \
		"$ddoc"

	for binary in go gofmt; do
		install -Dm755 bin/"$binary" "$dgo"/bin/"$binary"
		ln -s "$GOROOT_FINAL"/bin/"$binary" "$dbin"
	done

	cp -a api lib misc pkg src test "$dgo"
	cp -a doc/* "$ddoc"
}

b2sums="1cb2960f67335f0022900cdab5dd70bcb52f15c2d311ea2dd99a0205af518741d9642741ea1bb5fea870239d6c971e6c69053a195e6a72e7440c8bdd3a0c085c  go1.17.3.src.tar.gz"

pkgname=go
pkgrel=0
pkgver=1.14.7
pkgdesc="Go programming language compiler"
url="https://golang.org/"
arch="all"
license="BSD-3-Clause"
makedepends="bash go-bootstrap"
subpackages="$pkgname-doc"
source="https://golang.org/dl/go${pkgver/_/}.src.tar.gz
	dont_use_gold_arm64.patch
	mips-fix-linker.patch
	fix-setrlimit-hang.patch"
options="!check !strip"

case "$CTARGET_ARCH" in
	mips64*) export GOMIPS64=softfloat ;;
esac

export GOPATH="$srcdir"
export GOROOT="$GOPATH"/go
export builddir="$GOROOT"

provides="go-bootstrap=$pkgver-r$pkgrel"

GOROOT_FINAL=/usr/lib/go
GOROOT_BOOTSTRAP=$GOROOT_FINAL

build() {
	case "$(apk --print-arch)" in
		mips64*) export GO_LDSO="${GO_LDSO}-sf";;
		*) export GO_LDSO=/usr/lib/ld-musl-$(apk --print-arch).so.1;;
	esac
	cd src
	./make.bash
}

check() {
	cd src
	./run.bash --no-rebuild -k
}

package() {
	# clean source tree
	rm -rf pkg/bootstrap \
		pkg/obj
	# we want to keep test data around so users can have deeper go test
	# removing .bash, .rc etc isn't really worth it

	dbin="$pkgdir"/usr/bin
	dgo="$pkgdir"/"$GOROOT_FINAL"
	ddoc="$pkgdir"/usr/share/doc/"$pkgname"
	install -d \
		"$dbin" \
		"$dgo"/bin \
		"$ddoc"

	for binary in go gofmt; do
		install -Dm755 bin/"$binary" "$dgo"/bin/"$binary"
		ln -s "$GOROOT_FINAL"/bin/"$binary" "$dbin"
	done

	cp -a api lib misc pkg src test "$dgo"
	cp -a doc/* "$ddoc"
}

b2sums="ab43abeec9d636dd88eaa10dc210f5d11d487df35238a00548e1f56a86bdf2375e7c180ee6e1cea53591528714fa70333e3336db61eacfdeb5f51b2d5ea86a45  go1.14.7.src.tar.gz
58bf92fc78b8ac8cca86fd2152b80b4ef50d38fd63f01fc19271f883c393b076e9e8b80a387d5104e376067216b20da5860141c5943f9b1bfffd7e3ec1408468  dont_use_gold_arm64.patch
fda7a5ca2f69cf4f9810389109fb8cd2e29240f3db582cf1a626fcfdb3970fb34c0015f7e1185235f8819fe5679bf77da3fd3b28c465370ca2149ecbba0fb260  mips-fix-linker.patch
112db77a50279c4671d6cd82fc52d48b8cff50269d0523535b43d5210636baf7fdca24bfcc3d8f63971ecf94414ffb0d9419029b5c8d67e7457fda9c1f5055fe  fix-setrlimit-hang.patch"

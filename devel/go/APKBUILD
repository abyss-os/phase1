pkgname=go
pkgrel=0
pkgver=1.14.4
pkgdesc="Go programming language compiler"
url="https://golang.org/"
arch="all"
license="BSD-3-Clause"
makedepends="bash go-bootstrap"
subpackages="$pkgname-doc"
source="https://golang.org/dl/go${pkgver/_/}.src.tar.gz
	dont_use_gold_arm64.patch"
options="!check !strip"

case "$CTARGET_ARCH" in
	mips64*) export GOMIPS64=softfloat ;;
esac

export GOPATH="$srcdir"
export GOROOT="$GOPATH"/go
export builddir="$GOROOT"

provides="go-bootstrap=$pkgver-r$pkgrel"

GOROOT_FINAL=/usr/lib/go
GOROOT_BOOTSTRAP=$GOROOT_FINAL

build() {
	cd src
	env GO_LDSO=/usr/lib/ld-musl-$(uname -m).so.1 ./make.bash
}

check() {
	cd src
	./run.bash --no-rebuild -k
}

package() {
	# clean source tree
	rm -rf pkg/bootstrap \
		pkg/obj
	# we want to keep test data around so users can have deeper go test
	# removing .bash, .rc etc isn't really worth it

	dbin="$pkgdir"/usr/bin
	dgo="$pkgdir"/"$GOROOT_FINAL"
	ddoc="$pkgdir"/usr/share/doc/"$pkgname"
	install -d \
		"$dbin" \
		"$dgo"/bin \
		"$ddoc"

	for binary in go gofmt; do
		install -Dm755 bin/"$binary" "$dgo"/bin/"$binary"
		ln -s "$GOROOT_FINAL"/bin/"$binary" "$dbin"
	done

	cp -a api lib misc pkg src test "$dgo"
	cp -a doc/* "$ddoc"
}

b2sums="8dc44b2144587e24ef53adcffdf335ec03dbcbb1101e38ac54611eb9e6216d3a676f5a24daab24342018b549b7de2a8730e556abfda5e18199c55d266ac3a44b  go1.14.4.src.tar.gz
6a99a1806eec94eae49de269f7ac572b28c79a758863bbec2800cb458eb6861437002e5cfc5fa7d7966de495ea520329d410def7a374dfc191f7beae7fbf41d3  dont_use_gold_arm64.patch"

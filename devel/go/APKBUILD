pkgname=go
pkgver=1.16.5
pkgrel=0
pkgdesc="Go programming language compiler"
url="https://golang.org/"
arch="all"
license="BSD-3-Clause"
makedepends="bash go-bootstrap"
subpackages="$pkgname-doc"
source="https://golang.org/dl/go${pkgver/_/}.src.tar.gz
        dont_use_gold_arm64.patch
        mips-fix-linker.patch"
options="!check !strip"

export GOPATH="$srcdir"
export GOROOT="$GOPATH"/go
export builddir="$GOROOT"

provides="go-bootstrap=$pkgver-r$pkgrel"

GOROOT_FINAL=/usr/lib/go
GOROOT_BOOTSTRAP=$GOROOT_FINAL

case "$CARCH" in
    *) export GOMIPS64=softfloat GO_LDFLAGS='-buildmode=pie' GO_LDSO=/usr/lib/ld-musl-${CBUILD_ARCH}.so.1;;
esac

build() {
    msg "Using LDSO: ${GO_LDSO}, flags: ${GO_LDFLAGS}"
	cd src
	./make.bash
}

check() {
	cd src
	./run.bash --no-rebuild -k
}

package() {
	# clean source tree
	rm -rf pkg/bootstrap \
		pkg/obj
	# we want to keep test data around so users can have deeper go test
	# removing .bash, .rc etc isn't really worth it

	dbin="$pkgdir"/usr/bin
	dgo="$pkgdir"/"$GOROOT_FINAL"
	ddoc="$pkgdir"/usr/share/doc/"$pkgname"
	install -d \
		"$dbin" \
		"$dgo"/bin \
		"$ddoc"

	for binary in go gofmt; do
		install -Dm755 bin/"$binary" "$dgo"/bin/"$binary"
		ln -s "$GOROOT_FINAL"/bin/"$binary" "$dbin"
	done

	cp -a api lib misc pkg src test "$dgo"
	cp -a doc/* "$ddoc"
}

b2sums="a6565deb34b6cb167c41fc3af2e3bbdc8e22333adc9109de67c9e1f4bffb3d2c6e7d289e310f777d69092b3ee7a4dd706e13b0fe9ae5b0a16f270569953039df  go1.16.5.src.tar.gz
58bf92fc78b8ac8cca86fd2152b80b4ef50d38fd63f01fc19271f883c393b076e9e8b80a387d5104e376067216b20da5860141c5943f9b1bfffd7e3ec1408468  dont_use_gold_arm64.patch
cc2fc12aa214c982d8d2a28af99fd00089afb27e6abb3bdbd9ab4cbe3ca9444af4da38828cd68bae56b31dde24648ceb35a89c93de6b691327eef5fc078e6f57  mips-fix-linker.patch"

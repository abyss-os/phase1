pkgname=go
pkgrel=2
pkgver=1.14.3
pkgdesc="Go programming language compiler"
url="https://golang.org/"
arch="all"
license="BSD-3-Clause"
makedepends="bash go-bootstrap"
subpackages="$pkgname-doc"
source="https://golang.org/dl/go${pkgver/_/}.src.tar.gz
	dont_use_gold_arm64.patch"
options="!check !strip"

case "$CTARGET_ARCH" in
	mips64*) export GOMIPS64=softfloat ;;
esac

export GOPATH="$srcdir"
export GOROOT="$GOPATH"/go
export builddir="$GOROOT"

provides="go-bootstrap=$pkgver-r$pkgrel"

GOROOT_FINAL=/usr/lib/go
GOROOT_BOOTSTRAP=$GOROOT_FINAL

build() {
	cd src
	env GO_LDSO=/usr/lib/ld-musl-$(uname -m).so.1 ./make.bash
}

check() {
	cd src
	./run.bash --no-rebuild -k
}

package() {
	# clean source tree
	rm -rf pkg/bootstrap \
		pkg/obj
	# we want to keep test data around so users can have deeper go test
	# removing .bash, .rc etc isn't really worth it

	dbin="$pkgdir"/usr/bin
	dgo="$pkgdir"/"$GOROOT_FINAL"
	ddoc="$pkgdir"/usr/share/doc/"$pkgname"
	install -d \
		"$dbin" \
		"$dgo"/bin \
		"$ddoc"

	for binary in go gofmt; do
		install -Dm755 bin/"$binary" "$dgo"/bin/"$binary"
		ln -s "$GOROOT_FINAL"/bin/"$binary" "$dbin"
	done

	cp -a api lib misc pkg src test "$dgo"
	cp -a doc/* "$ddoc"
}

b2sums="986ee88ac89a6ad8c492d7311271fadf5a0df5763f79ca0688dc94e2c49c36ea808f2184b7d57df2cfd24948d74e45103ef2171c5c6cdc2e0b6d5237cf78dc6a  go1.14.3.src.tar.gz
6a99a1806eec94eae49de269f7ac572b28c79a758863bbec2800cb458eb6861437002e5cfc5fa7d7966de495ea520329d410def7a374dfc191f7beae7fbf41d3  dont_use_gold_arm64.patch
77b0beef8f22a0339f3584954555d61ea6194d29faf6902f0f6a65f095131a82a239133ddc64f8d2f70532fea551bcf1be2cba77c0a8e912910ec66fccebb580  go_is_so_bad.patch"

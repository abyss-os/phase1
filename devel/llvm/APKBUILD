pkgname=llvm
pkgver=12.0.0
pkgrel=1
pkgdesc="$pkgname"
arch="all"
url=https://llvm.org
license=.
source="https://github.com/llvm/llvm-project/archive/llvmorg-${pkgver/_/-}.tar.gz
		mips_softfloat.patch
		mips_ppc_crt.patch
		lld-znow.patch
		riscv_relax.patch
		tmp-kernel.patch
		mips_fix_syscall_warning.patch
		mips-ldso.patch"

subpackages="$pkgname-dev"

builddir=$srcdir/llvm-project-llvmorg-${pkgver/_/-}
_builddir="$srcdir/build"

makedepends="cmake ncurses-dev libedit-dev samurai libffi-dev python3-dev libexecinfo-dev libxml2-dev lua5.4-dev xz-dev swig"
provides="clang $pkgname-bootstrap=$pkgver-r$pkgrel"
replaces="lld llvm-binutils"

_targets="all"
_arch_extra="-DCOMPILER_RT_BUILD_SANITIZERS=OFF -DCOMPILER_RT_BUILD_XRAY=OFF -DCOMPILER_RT_BUILD_MEMPROF=OFF -DLLVM_TOOL_LLVM_ITANIUM_DEMANGLE_FUZZER_BUILD=OFF
            -DLLVM_TOOL_LLVM_MC_ASSEMBLE_FUZZER_BUILD=OFF -DLLVM_TOOL_LLVM_MC_DISASSEMBLE_FUZZER_BUILD=OFF -DLLVM_TOOL_LLVM_OPT_FUZZER_BUILD=OFF
            -DLLVM_TOOL_LLVM_MICROSOFT_DEMANGLE_FUZZER_BUILD=OFF"

case $CARCH in
        mips64*) _targets="Mips";;
        riscv64) _targets="RISCV";;
        x86_64) _arch_extra="-DCOMPILER_RT_BUILD_SANITIZERS=ON -DCOMPILER_RT_BUILD_XRAY=ON -DCOMPILER_RT_BUILD_MEMPROF=ON
                -DLLVM_TOOL_LLVM_ITANIUM_DEMANGLE_FUZZER_BUILD=ON -DLLVM_TOOL_LLVM_MC_ASSEMBLE_FUZZER_BUILD=ON
                -DLLVM_TOOL_LLVM_MC_DISASSEMBLE_FUZZER_BUILD=ON -DLLVM_TOOL_LLVM_OPT_FUZZER_BUILD=ON
                -DLLVM_TOOL_LLVM_MICROSOFT_DEMANGLE_FUZZER_BUILD=ON";;
esac

prepare() {
	default_prepare

	mkdir -p $_builddir && cd $_builddir

	cmake -G Ninja -Wno-dev \
			-DCMAKE_C_COMPILER=$CC \
			-DCMAKE_CXX_COMPILER=$CXX \
			-DCMAKE_C_COMPILER_TARGET=$CTARGET \
			-DCMAKE_CXX_COMPILER_TARGET=$CTARGET \
			-DCMAKE_C_FLAGS="$CFLAGS" \
			-DCMAKE_CXX_FLAGS="$CXXFLAGS" \
			-DCMAKE_EXE_LINKER_FLAGS="$LDFLAGS" \
			-DCMAKE_INSTALL_PREFIX=/usr \
			-DCMAKE_BUILD_TYPE=Release \
			-DLLVM_VERSION_SUFFIX="" \
			-DLLVM_APPEND_VC_REV=OFF \
			-DLLVM_ENABLE_PROJECTS="libunwind;libcxxabi;libcxx;compiler-rt;llvm;lld;clang;clang-tools-extra;lldb" \
			-DLLVM_ENABLE_LLD=ON \
			-DLLVM_TARGETS_TO_BUILD="$_targets" \
			-DLLVM_INSTALL_BINUTILS_SYMLINKS=OFF \
			-DLLVM_INSTALL_CCTOOLS_SYMLINKS=OFF \
			-DLLVM_INCLUDE_EXAMPLES=OFF \
			-DLLVM_ENABLE_PIC=ON \
			-DLLVM_ENABLE_LTO=Thin \
			-DLLVM_INCLUDE_GO_TESTS=OFF \
			-DLLVM_INCLUDE_TESTS=OFF \
			-DLLVM_HOST_TRIPLE=$CTARGET \
			-DLLVM_DEFAULT_TARGET_TRIPLE=$CTARGET \
			-DLLVM_ENABLE_LIBXML2=ON \
			-DLLVM_ENABLE_ZLIB=ON \
			-DLLVM_BUILD_LLVM_DYLIB=ON \
			-DLLVM_LINK_LLVM_DYLIB=ON \
			-DLLVM_ENABLE_FFI=ON \
			-DLLVM_OPTIMIZED_TABLEGEN=ON \
			-DLLVM_INCLUDE_BENCHMARKS=OFF \
			-DLLVM_INCLUDE_DOCS=OFF \
			-DLLVM_TOOL_LLVM_GO_BUILD=OFF \
			-DLLVM_INSTALL_UTILS=ON \
			-DLLVM_ENABLE_LIBCXX=ON \
			-DLLVM_STATIC_LINK_CXX_STDLIB=ON \
			-DLIBCXX_ENABLE_FILESYSTEM=ON \
			-DLIBCXX_USE_COMPILER_RT=ON \
			-DLIBCXX_HAS_MUSL_LIBC=ON \
			-DLIBCXX_ENABLE_STATIC_ABI_LIBRARY=ON \
			-DLIBCXX_STATICALLY_LINK_ABI_IN_SHARED_LIBRARY=ON \
			-DLIBCXX_STATICALLY_LINK_ABI_IN_STATIC_LIBRARY=ON \
			-DLIBCXX_INSTALL_LIBRARY=OFF \
			-DLIBCXXABI_ENABLE_ASSERTIONS=ON \
			-DLIBCXXABI_USE_COMPILER_RT=ON \
			-DLIBCXXABI_USE_LLVM_UNWINDER=ON \
			-DLIBCXXABI_ENABLE_STATIC_UNWINDER=ON \
			-DLIBCXXABI_STATICALLY_LINK_UNWINDER_IN_SHARED_LIBRARY=YES \
			-DLIBCXXABI_ENABLE_SHARED=OFF \
			-DLIBCXXABI_ENABLE_STATIC=ON \
			-DLIBCXXABI_INSTALL_LIBRARY=OFF \
			-DLIBUNWIND_ENABLE_SHARED=OFF \
			-DLIBUNWIND_ENABLE_STATIC=ON \
			-DLIBUNWIND_INSTALL_LIBRARY=OFF \
			-DLIBUNWIND_USE_COMPILER_RT=ON \
			-DCLANG_DEFAULT_LINKER=lld \
			-DCLANG_DEFAULT_CXX_STDLIB='libc++' \
			-DCLANG_DEFAULT_RTLIB=compiler-rt \
			-DCLANG_DEFAULT_UNWINDLIB=libunwind \
			-DCLANG_VENDOR="Abyss OS" \
			-DCLANG_ENABLE_STATIC_ANALYZER=OFF \
			-DCLANG_ENABLE_ARCMT=OFF \
			-DCLANG_LINK_CLANG_DYLIB=ON \
			-DCOMPILER_RT_USE_BUILTINS_LIBRARY=ON \
			-DCOMPILER_RT_DEFAULT_TARGET_ONLY=OFF \
			-DCOMPILER_RT_INCLUDE_TESTS=OFF \
			-DCOMPILER_RT_INCLUDE_TESTS=OFF \
			-DCOMPILER_RT_BUILD_LIBFUZZER=OFF \
			-DENABLE_EXPERIMENTAL_NEW_PASS_MANAGER=TRUE \
			-DLLVM_USE_NEWPM=ON \
            $_arch_extra \
			$builddir/llvm
}

build() {
	cd $_builddir
	ninja -j${JOBS} unwind cxxabi cxx
	ninja -j${JOBS} all
}

package() {
	cd $_builddir
	DESTDIR="$pkgdir" ninja install
}

binutils_aalt() {
    depends="$depends aalt"
    pkgdesc="$pkgdesc (AAlt registration files)"
    install_if="aalt ${subpkgname%-aalt}=$pkgver-r$pkgrel"

    for p in addr2line ar mt nm objcopy objdump ranlib readelf readobj size split strings strip
    do
        DESTDIR=$subpkgdir aalt-bin -R -g llvm -p $p -f /usr/bin/llvm-$p
    done
}

lld_aalt() {
    depends="$depends aalt"
    pkgdesc="$pkgdesc (AAlt registration files)"
    install_if="aalt ${subpkgname%-aalt}=$pkgver-r$pkgrel"

    DESTDIR=$subpkgdir aalt-bin -R -g llvm -p ld -f /usr/bin/lld
}

b2sums="f9c3ba8c58571855caa4f206fd285c9b5be66672fb0814cb8bc0964a051f57f5d35013aa1e27cbda502652b37df1ec23474129109e76a42066847860db441dbe  llvmorg-12.0.0.tar.gz
8e23d19518bc2bba4009c30ba6d8c981e94b6e293a95a29ebbb9be7c9a7a40b21900a7e526529149847a42bd98899306a1af9b99c819e290d4a67e34f4ea32c3  mips_softfloat.patch
4bcd1888e1376874bfc31239e35088aeda82f09c5c9a7730ff393f49596b742c5b9245a157f377ecfac417af7c4bebbc7770658a5fffc333a3dd1aabaf24bbcb  mips_ppc_crt.patch
ada8faf1f1bbdfc52b0493ba563b91de954e6613b8be0af7deeabdf0b621a69a45e5acc753ecb487f461360bb2ec99b4f510a8872bff3afe90e9e7b91de12997  lld-znow.patch
c99d536538e3e4830c618e11214f4fdda6cf377c9ea565b254e2484e52b68202b19b921b09ef4b784897bceac8a3b7bb9331b4b0087a5cafb8a1a3518fb1a1c4  riscv_relax.patch
66835dfc1460df303d26fe7c5d630b836cbb0e1ef7c39d59695f73f69e2d12af59db72ce16b1ee16f9ff5ea7bd530a9d39b7c98c0f7c89d74c03ab212d17db9a  tmp-kernel.patch
bad67cfe2f509010d9cff29b361239ae67cc726941b940a5acd7365af4a581e4734a5ca7f9840481be227189c44ce6ae93137c2400036829b41aa4639cef13b4  mips_fix_syscall_warning.patch
5669318224dd77fd3274f510dedf3f8d07308d4da7530ea3f65b26ddef016c8013b14acde053a6c002ef53b3d27bf413b024c8e02941de235f70bd03b62d2a94  mips-ldso.patch"

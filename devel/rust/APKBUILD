pkgname=rust
pkgver=1.48.0
pkgrel=0
pkgdesc="The Rust Programming Language"
url="https://www.rust-lang.org"
arch="x86_64"
license="Apache-2.0 AND MIT"

config_helper() {
	# rust has stupid checksums, will disable later
	return 0
}

makedepends="
	cmake
	curl-dev
	file
	libgit2-dev
	openssl-dev
	llvm-dev
	python3
	gtar
	zlib-dev
	coreutils
	llvm-dev
	clang
	lld
	rust-bootstrap
	cargo-bootstrap
"

provides="rust-bootstrap=$pkgver-r$pkgrel"
depends="$pkgname-stdlib=$pkgver-r$pkgrel musl-dev"

options="!archcheck !check"
subpackages="
	$pkgname-stdlib
	cargo
	cargo-bash-completions:_cargo_bashcomp:noarch
	cargo-zsh-completion:_cargo_zshcomp:noarch
	"
source="https://static.rust-lang.org/dist/rustc-$pkgver-src.tar.gz
	musl-fix-static-linking.patch
	musl-fix-linux_musl_base.patch
	static-pie.patch
	need-rpath.patch
	alpine-move-py-scripts-to-share.patch
	abyss-target.patch
	install-template-shebang.patch
	check-rustc
	link-musl-dynamically.patch
	libunwind.patch
	morons.patch
	more_morons.patch
	even_more_morons.patch
	how_even.patch"
builddir="$srcdir/rustc-$pkgver-src"

case "$CARCH" in
	*)
		_build="$CBUILD"
		_target="$CTARGET"
esac

_rlibdir="usr/lib/rustlib/$_target/lib"
_sharedir="usr/share/rust"

ldpath="/$_rlibdir"

# rust checksums files in vendor/, but we have to patch a few files...
_clear_vendor_checksums() {
	sed -i 's/\("files":{\)[^}]*/\1/' vendor/$1/.cargo-checksum.json
}

prepare() {
	default_prepare

	sed -i /LD_LIBRARY_PATH/d src/bootstrap/bootstrap.py

	# to dynamically link against musl
	_clear_vendor_checksums libc

	# Remove bundled dependencies.
	rm -Rf src/llvm-project/
}

build() {

	# override LD for now, since rustc doesn't bother passing -L/usr/lib
	export LD=$CC RUSTFLAGS="-C linker=$CC"
	./configure \
		--build="$_build" \
		--host="$_build" \
		--target="$_target" \
		--prefix="/usr" \
		--release-channel="stable" \
		--enable-local-rust \
		--local-rust-root="/usr" \
		--enable-option-checking \
		--enable-extended \
		--tools="cargo" \
		--set="build.local-rebuild=true" \
		--set="build.fast-submodules=true" \
		--set="build.docs=false" \
		--set="build.locked-deps=true" \
		--set="build.vendor=true" \
		--set="llvm.skip-rebuild=true" \
		--set="llvm.link-shared=true" \
		--set="target.$_build.crt-static=false" \
		--set="target.$_build.linker=$CC" \
		--set="target.$_build.llvm-config=/usr/bin/llvm-config" \
		--set="rust.deny-warnings=false" \
		--llvm-root="/usr"

	sed 's|deny(warnings,|deny(|' -i src/bootstrap/lib.rs

	./x.py build --jobs ${JOBS}
}

package() {
	make DESTDIR="$pkgdir" install

	cd "$pkgdir"

	# Python scripts are noarch, so move them to /usr/share.
	# Requires move-py-scripts-to-share.patch to be applied.
	_mv usr/lib/rustlib/etc/*.py $_sharedir/etc/
	rmdir -p usr/lib/rustlib/etc 2>/dev/null || true

	# Remove some clutter.
	cd usr/lib/rustlib
	rm components install.log manifest-* rust-installer-version uninstall.sh

	rm -rf ${pkgdir}/usr/share/doc ${pkgdir}/usr/share/man
}

stdlib() {
	pkgdesc="Standard library for Rust (static rlibs)"

	_mv "$pkgdir"/$_rlibdir/*.rlib "$subpkgdir"/$_rlibdir/
}

analysis() {
	pkgdesc="Compiler analysis data for the Rust standard library"
	depends="$pkgname-stdlib=$pkgver-r$pkgrel"

	_mv "$pkgdir"/$_rlibdir/../analysis "$subpkgdir"/${_rlibdir%/*}/
}

gdb() {
	pkgdesc="GDB pretty printers for Rust"
	depends="$pkgname gdb"

	mkdir -p "$subpkgdir"
	cd "$subpkgdir"

	_mv "$pkgdir"/usr/bin/rust-gdb usr/bin/
	_mv "$pkgdir"/$_sharedir/etc/gdb_*.py $_sharedir/etc/
}

lldb() {
	pkgdesc="LLDB pretty printers for Rust"
	depends="$pkgname lldb py2-lldb"

	mkdir -p "$subpkgdir"
	cd "$subpkgdir"

	_mv "$pkgdir"/usr/bin/rust-lldb usr/bin/
	_mv "$pkgdir"/$_sharedir/etc/lldb_*.py $_sharedir/etc/
}

src() {
	pkgdesc="$pkgdesc (source code)"
	depends="$pkgname"
	license="$license OFL-1.1 GPL-3.0-or-later GPL-3.0-with-GCC-exception CC-BY-SA-3.0 LGPL-3.0"

	_mv "$pkgdir"/usr/lib/rustlib/src/rust "$subpkgdir"/usr/src/
	rmdir -p "$pkgdir"/usr/lib/rustlib/src 2>/dev/null || true

	mkdir -p "$subpkgdir"/usr/lib/rustlib/src
	ln -s ../../../src/rust "$subpkgdir"/usr/lib/rustlib/src/rust
}

cargo() {
	pkgdesc="The Rust package manager"
	license="Apache-2.0 MIT UNLICENSE"
	depends="$pkgname"
	# XXX: See comment on top-level provides=.
	provides="cargo-bootstrap=$pkgver-r$pkgrel"

	_mv "$pkgdir"/usr/bin/cargo "$subpkgdir"/usr/bin/
}

_cargo_bashcomp() {
	pkgdesc="Bash completions for cargo"
	license="Apache-2.0 MIT"
	depends=""
	install_if="cargo=$pkgver-r$pkgrel bash-completion"

	cd "$pkgdir"
	_mv etc/bash_completion.d/cargo \
		"$subpkgdir"/usr/share/bash-completion/completions/
	rmdir -p etc/bash_completion.d 2>/dev/null || true
}

_cargo_zshcomp() {
	pkgdesc="ZSH completions for cargo"
	license="Apache-2.0 MIT"
	depends=""
	install_if="cargo=$pkgver-r$pkgrel zsh"

	cd "$pkgdir"
	_mv usr/share/zsh/site-functions/_cargo \
		"$subpkgdir"/usr/share/zsh/site-functions/_cargo
	rmdir -p usr/share/zsh/site-functions 2>/dev/null || true
}

_cargo_doc() {
	pkgdesc="The Rust package manager (documentation)"
	license="Apache-2.0 MIT"
	install_if="docs cargo=$pkgver-r$pkgrel"

	# XXX: This is hackish!
	cd "$pkgdir"/../$pkgname-doc
	_mv usr/share/man/man1/cargo* "$subpkgdir"/usr/share/man/man1/
}

_mv() {
	local dest; for dest; do true; done  # get last argument
	mkdir -p "$dest"
	mv "$@"
}

b2sums="7d3a30ccb08c66babe808e25b8ea5cab85d4f9b5aec2fe7ae21d5fbe3194473ee97d9589c8a146fbac15e7409610ad5070db0b0d5701b072c9203e8e09687acc  rustc-1.44.0-src.tar.gz
443371a1ce3e3e89469336f51414e3ada7c4cc21e567b4ee0e047d5e64c88b730ed23fc72676584da7d9949326b1736db4cad617758b650304a5fe6d28edfa40  musl-fix-static-linking.patch
d43d643d2e7520cfe666b4dd22570838340dca2da6d8f79fc2b4b95111b32d40bff12a1a4da1ab7b000a73ae374b111e6478c5083676c6aa482831dfd66615f4  musl-fix-linux_musl_base.patch
07edaea52281deb861d0319bc9762590b02ecd5c539becd552845e77562888ad8e3f82e6d4b9212f8719df86bce7cbacf70148f3ffe8ea1d597759ab56bda427  static-pie.patch
2e10a1eda391092f31206dda19f4bde516d4a4a71548b441a47cf65338905490a0916d158056f707f7c1d1b5e4a3da9fa8876caa422c65dda6eb1bdfccdd25e4  need-rpath.patch
dcd184c205eb90591fa88aa69e80cbdd2c18ac8f22040ce20b9a638979ac4d8aa82460d187e5ee28958c7b2655df251402360e6e36556efeefc134e2fdde8111  alpine-move-py-scripts-to-share.patch
787a125dec178583e1d8fe703ba1dceb9f856bfedff07e7b050bd7b96f0524ad574f95f2677d971ef5366e4aa57e54074f5030a4805d94c6f880b67d2841655f  abyss-target.patch
4de9b6c3afcbc649eb3b9147d52e78cc87f32f794cb10ec22ff272f7d3edd8b9acd11a64c47dff85de090215b3493c97f39cdc7524d81f8e45df4ced22fa3879  install-template-shebang.patch
03e1b320d2b24f09d348a5301c5fdcc88d41037cdfde36da5f92caf95b687a8c245997f8917b0bc7c4bde9ad09afcb43343df5faf1e356a3535504f2ed7e7587  check-rustc
3762c2d820cb6fa7d5c03971e8130b33317dfc28349df99841613b5cfd5aca67d0cf22117cac42ba6b111821892fbfb8ddf2998ba4da92a67f7a1efd9ab9e883  link-musl-dynamically.patch
5e360514afbe81212a6b50dbcc0ec3f569f89752e321322b2151911ba0d14d8b86b0378fc4a7ecf875c9da1db0ae20ff0a51d45c4e0889c8d7768c785e9ece39  libunwind.patch
ced05579bce427a9a913864d454c4b8cf98f93db31fba3c9fb301b4b53c5e42fade93fd9acbeac0613ce5639109a471eb670baf9b0104a75bff7a28d2f8f89e0  morons.patch
2bf84996d30e1d8ea2a6aca6a22fc0a87c7407ced0c0f529e971aa979531c91501ae67e72d0014c4f810c4241f386209ae2386b96f8824fbace8eb40c4191108  more_morons.patch
0d606e447e1092eddea1c78808510de1647f9e446d1f1e71429bde5e42b6a67c94ea3b84facb506a73ca52312400b3e341d082c67db0474029c2c201503d2dae  even_more_morons.patch
413b48424624f6e3de01c086eb2717f2d8c4d3750ed44180986145de73b6e2130ef88a9d155b0ffa62e45dba34047c729f583b528051891f07a48d7883a876c4  how_even.patch"

pkgname=rust
pkgver=1.49.0
pkgrel=2
pkgdesc="The Rust Programming Language"
url="https://www.rust-lang.org"
arch="x86_64 ppc64le"
license="Apache-2.0 AND MIT"

makedepends="python3 file coreutils curl-dev libgit2-dev openssl-dev zlib-dev rust-bootstrap cargo-bootstrap"

provides="rust-bootstrap=$pkgver-r$pkgrel"
options="!archcheck !check"

subpackages="$pkgname-doc cargo cargo-bash-completions:_cargo_bashcomp:noarch cargo-zsh-completion:_cargo_zshcomp:noarch"

source="https://static.rust-lang.org/dist/rustc-$pkgver-src.tar.gz
	alpine-move-py-scripts-to-share.patch
	install-template-shebang.patch
	libunwind.patch
	libz-sys_checksum.patch
	"
builddir="$srcdir/rustc-$pkgver-src"

case "${CARCH}" in
	riscv64) _rustarch="riscv64gc";;
	ppc64le) _rustarch="powerpc64le";;
	*) _rustarch="${CARCH}";;
esac

_build="${_rustarch}-unknown-linux-musl"
_target="${_rustarch}-unknown-linux-musl"

_rlibdir="usr/lib/rustlib/$_target/lib"
_sharedir="usr/share/rust"

ldpath="/$_rlibdir"

export RUST_BACKTRACE=1 PKG_CONFIG_ALLOW_CROSS=1

_clear_vendor_checksums() {
	sed -i 's/\("files":{\)[^}]*/\1/' vendor/$1/.cargo-checksum.json
}

prepare() {
	default_prepare
	sed -i /LD_LIBRARY_PATH/d src/bootstrap/bootstrap.py
	_clear_vendor_checksums libc
	rm -rf src/llvm-project/
}

build() {
	AR=llvm-ar
	./configure \
		--build="$_build" \
		--host="$_target" \
		--target="$_target" \
		--prefix="/usr" \
		--release-channel="stable" \
		--enable-local-rust \
		--local-rust-root="/usr" \
		--llvm-root="/usr" \
		--disable-docs \
		--enable-extended \
		--tools="cargo" \
		--enable-vendor \
		--enable-locked-deps \
		--enable-llvm-link-shared \
		--enable-option-checking \
		--python="python3" \
		--set="rust.musl-root=/usr" \
		--set="target.$_target.llvm-config=/usr/bin/llvm-config" \
		--set="target.$_target.musl-root=/usr" \
		--set="target.$_target.crt-static=false" \
		--set="target.$_target.cc=$CC" \
		--set="target.$_target.cxx=$CXX" \
		--set="target.$_target.ar=$AR" \
		--set="target.$_target.linker=$CC" \
		--set="target.$_build.musl-root=/usr" \
		--set="target.$_build.crt-static=false" \
		--set="target.$_build.cc=$CC" \
		--set="target.$_build.cxx=$CXX" \
		--set="target.$_build.ar=$AR" \
		--set="target.$_build.linker=$CC"

	sed 's/#deny-warnings = .*/deny-warnings = false/' -i config.toml
	sed 's|deny(warnings,|deny(|' -i src/bootstrap/lib.rs

	./x.py build --jobs ${JOBS}
}

package() {
	DESTDIR="$pkgdir" ./x.py install

	cd "$pkgdir"

	_mv usr/lib/rustlib/etc/*.py $_sharedir/etc/
	rmdir -p usr/lib/rustlib/etc 2>/dev/null || true

	cd usr/lib/rustlib
	rm components install.log manifest-* rust-installer-version uninstall.sh
	if [ "$_build" != "$_target" ]; then
		rm -rf "$pkgdir"/usr/lib/rustlib/$_build
	fi
}

stdlib() {
	pkgdesc="Standard library for Rust (static rlibs)"
	depends=

	_mv "$pkgdir"/$_rlibdir/*.rlib "$subpkgdir"/$_rlibdir/
}

analysis() {
	pkgdesc="Compiler analysis data for the Rust standard library"
	depends="$pkgname-stdlib=$pkgver-r$pkgrel"

	_mv "$pkgdir"/$_rlibdir/../analysis "$subpkgdir"/${_rlibdir%/*}/
}

gdb() {
	pkgdesc="GDB pretty printers for Rust"
	depends="$pkgname=$pkgver-r$pkgrel gdb"

	mkdir -p "$subpkgdir"
	cd "$subpkgdir"

	_mv "$pkgdir"/usr/bin/rust-gdb usr/bin/
	_mv "$pkgdir"/$_sharedir/etc/gdb_*.py $_sharedir/etc/
}

lldb() {
	local _pyver=${_python#python}
	pkgdesc="LLDB pretty printers for Rust"
	depends="$pkgname=$pkgver-r$pkgrel lldb py$_pyver-lldb"

	mkdir -p "$subpkgdir"
	cd "$subpkgdir"

	_mv "$pkgdir"/usr/bin/rust-lldb usr/bin/
	_mv "$pkgdir"/$_sharedir/etc/lldb_*.py $_sharedir/etc/
}

cargo() {
	pkgdesc="The Rust package manager"
	license="Apache-2.0 MIT UNLICENSE"
	depends="$pkgname=$pkgver-r$pkgrel"
	provides="cargo-bootstrap=$pkgver-r$pkgrel"

	_mv "$pkgdir"/usr/bin/cargo "$subpkgdir"/usr/bin/
}

_cargo_bashcomp() {
	pkgdesc="Bash completions for cargo"
	license="Apache-2.0 MIT"
	depends=""
	install_if="cargo=$pkgver-r$pkgrel bash-completion"

	cd "$pkgdir"
	_mv etc/bash_completion.d/cargo \
		"$subpkgdir"/usr/share/bash-completion/completions/
	rmdir -p etc/bash_completion.d 2>/dev/null || true
}

_cargo_zshcomp() {
	pkgdesc="ZSH completions for cargo"
	license="Apache-2.0 MIT"
	depends=""
	install_if="cargo=$pkgver-r$pkgrel zsh"

	cd "$pkgdir"
	_mv usr/share/zsh/site-functions/_cargo \
		"$subpkgdir"/usr/share/zsh/site-functions/
	rmdir -p usr/share/zsh/site-functions 2>/dev/null || true
}

_mv() {
	local dest; for dest; do true; done  # get last argument
	mkdir -p "$dest"
	mv "$@"
}

b2sums="85095e26455b54d6d542d4a460ff0acae0e09007fc7493f58a5abe0d98fab9361f41bfb2fad4bc6d3d4365852ab30d93adb31ed1799257baf57440299f22f455  rustc-1.49.0-src.tar.gz
5efa52ab75426ddad6c84e97713a6e792721083218638fe88b4fba4803f1902be973662cc0d3fb859a898ecceaa9bd78ee323a8446f569cd4e156ba9fc29ae60  alpine-move-py-scripts-to-share.patch
4de9b6c3afcbc649eb3b9147d52e78cc87f32f794cb10ec22ff272f7d3edd8b9acd11a64c47dff85de090215b3493c97f39cdc7524d81f8e45df4ced22fa3879  install-template-shebang.patch
16c6b43a4cbe7e678fdd9c7cfbd90e79ee2e847bb9086e77536b1a50ddba65799775a34cb229c8568d9689f8e7c36ab0c3beed04f27f74ae5a9c232ac1237dd7  libunwind.patch
785fad915314a40e226760d0e61ba17dbecd51e91d9d4f690a8700ecf6394ae91d7d0a256ec0335f04e3b6f0a96c3d9d3433815c22f60825f4ddf18664dec1b3  libz-sys_checksum.patch"
